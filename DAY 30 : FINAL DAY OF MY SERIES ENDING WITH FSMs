//This is a Moore state machine with two states, one input, and one output. Implement this state machine. Notice that the reset state is B.This exercise is the same as fsm1s, but using asynchronous reset.

module top_module(
    input clk,
    input areset,    // Asynchronous reset to state B
    input in,
    output out);//  

    parameter A=0, B=1; 
    reg state, next_state;

    always @(*) begin    // This is a combinational always block
        // State transition logic
        case(state)
            A : next_state = (in)?A:B;
            B : next_state = (in)?B:A;
        endcase
    end

    always @(posedge clk, posedge areset) begin    // This is a sequential always block
        // State flip-flops with asynchronous reset
         if (areset)
            state <= B; 
        else
            state <= next_state;
    end

    // Output logic
    assign out = (state == B);

endmodule



//Exams/ece241 2013 q4

module top_module (
    input clk,
    input reset,
    input [3:1] s,
    output fr3,
    output fr2,
    output fr1,
    output dfr
); 
    
    parameter [2:0] D=3'b101,C0=3'b100,C1=3'b011,B0=3'b010,B1=3'b001,A=3'b000;
	
    reg[2:0] state,next_state;
    always @(*)
        begin
            case(state)
                A:next_state=s[1]?B1:A;
                B1:next_state=s[2]?C1:s[1]?B1:A;
                B0:next_state=s[2]?C1:s[1]?B0:A;
                C1:next_state=s[3]?D:s[2]?C1:B0;
                C0:next_state=s[3]?D:s[2]?C0:B0;
                D:next_state=s[3]?D:C0;
                default: next_state = 3'bxxx;
            endcase
        end
    always @(posedge clk)
        begin
            if(reset)
                state <= A;
            else
                state <= next_state;
        end
    always @(*)
        begin
            case(state)
                A: {fr3,fr2,fr1,dfr} = 4'b1111;
                B0: {fr3,fr2,fr1,dfr} = 4'b0111;
                B1: {fr3,fr2,fr1,dfr} = 4'b0110;
                C0: {fr3,fr2,fr1,dfr} = 4'b0011;
                C1: {fr3,fr2,fr1,dfr} = 4'b0010;
                D: {fr3,fr2,fr1,dfr} = 4'b0000;
                default : {fr3,fr2,fr1,dfr} = 4'bxxxx;
            endcase
        end
                
endmodule
